document.addEventListener('DOMContentLoaded', () => {
    // --- Lógica para destacar o link da página atual na navegação ---
    const highlightActiveLink = () => {
        const currentPath = window.location.pathname.split('/').pop();
        const navLinks = document.querySelectorAll('.sidebar nav ul li a');

        navLinks.forEach(link => {
            const linkPath = link.getAttribute('href').split('/').pop();
            // Lógica para marcar o link ativo na sidebar
            if (linkPath === currentPath ||
                (currentPath === '' && linkPath === 'index.html') ||
                // Se a página atual é 'api-cotacao.html', destaque 'projetos.html'
                (currentPath === 'api-cotacao.html' && linkPath === 'projetos.html')
            ) {
                link.classList.add('active');
            } else {
                link.classList.remove('active');
            }
        });
    };

    highlightActiveLink();

    // --- Lógica do Menu Off-Canvas (Hambúrguer) ---
    const hamburgerBtn = document.getElementById('hamburger-btn');
    const sidebar = document.getElementById('sidebar');
    const overlay = document.getElementById('overlay');
    const siteWrapper = document.querySelector('.site-wrapper');

    if (hamburgerBtn && sidebar && overlay && siteWrapper) {
        console.log("script.js: Elementos do menu Off-Canvas encontrados. Inicializando.");

        const toggleMenu = () => {
            sidebar.classList.toggle('is-active');
            hamburgerBtn.classList.toggle('is-active');
            overlay.classList.toggle('is-active');
            //siteWrapper.classList.toggle('sidebar-open');
            document.body.classList.toggle('no-scroll');
            console.log("script.js: Menu toggled.");
        };

        hamburgerBtn.addEventListener('click', toggleMenu);
        overlay.addEventListener('click', toggleMenu);

        // Fecha o menu se um link na sidebar for clicado
        const navLinks = sidebar.querySelectorAll('nav ul li a');
        navLinks.forEach(link => {
            link.addEventListener('click', (e) => {
                const linkHref = link.getAttribute('href');
                const currentPath = window.location.pathname.split('/').pop();

                // Se o link é para a mesma página, para uma âncora, ou para 'projetos.html' estando em 'api-cotacao.html'
                if (linkHref === currentPath ||
                    (currentPath === '' && linkHref === 'index.html') ||
                    (currentPath === 'api-cotacao.html' && linkHref === 'projetos.html') ||
                    linkHref.startsWith('#')) {
                    
                    if (sidebar.classList.contains('is-active')) {
                        toggleMenu(); // Apenas fecha o menu
                        if (linkHref.startsWith('#')) {
                            e.preventDefault(); // Previne o salto para âncoras (para possível scroll suave)
                        }
                    }
                } else {
                    // Se o link é para OUTRA página
                    if (sidebar.classList.contains('is-active')) {
                        toggleMenu(); // Fecha o menu e permite a navegação normal
                    }
                }
            });
        });
    } else {
        console.warn("script.js: Um ou mais elementos do menu Off-Canvas não foram encontrados. O menu pode não funcionar.");
        console.log({ hamburgerBtn, sidebar, overlay, siteWrapper });
    }

    // --- Lógica de Animações de "Aparecer ao Rolar" ---
    const observerOptions = {
        root: null,
        rootMargin: '0px',
        threshold: 0.1
    };

    const observer = new IntersectionObserver((entries, observer) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.classList.add('animated-fade-in-up');
                observer.unobserve(entry.target);
            }
        });
    }, observerOptions);

    document.querySelectorAll('.hero, .about-me, .learning-journey, .learning-item, .projeto-card, .curso-card').forEach(el => {
        el.classList.add('animate-on-scroll');
        observer.observe(el);
    });
});